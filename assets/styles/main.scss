@use './variables' as *;
@use './mixins' as *;
@use './utils' as *;

body {
  font-family: $font-family;
  background: #ecf0f1;
}

* {
  margin: 0;
  padding: 0;
  text-decoration: none;
  color: $primary-color;
  box-sizing: border-box; 
}

$breakpoint-sm: 768px;

@mixin responsive($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

/*
  loading animation
*/
.loader {
  width: 50px;
  aspect-ratio: 1;
  display: grid;

  &::before,
  &::after {
    content: "";
    grid-area: 1 / 1;
    --c: no-repeat radial-gradient(farthest-side,  var(--primary-color) 92%, transparent);
    background: 
      var(--c) 50% 0, 
      var(--c) 50% 100%, 
      var(--c) 100% 50%, 
      var(--c) 0 50%;
    background-size: 12px 12px;
    animation: l12 1s infinite;
  }

  &::before {
    margin: 4px;
    filter: hue-rotate(45deg);
    background-size: 8px 8px;
    animation-timing-function: linear;
  }
}

@keyframes l12 {
  100% {
    transform: rotate(0.5turn);
  }
}

// shared class
.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;

  .tag {
    padding: 5px 10px;
    margin: 3px 0;
    border-radius: 6px;
    background: var(--primary-color);
    color: var(--secondary-color);
  }
}

// animation
.animate {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  transform-origin: top left;
}

@keyframes enterCenter {
  from {
    opacity: 0;
    transform: scale(0.1) rotate(30deg) translate(-50%, -50%);
    transform-origin: center bottom;
  }

  50% {
    transform: rotate(-10deg) translate(-50%, -50%);
  }

  70% {
    transform: rotate(3deg) translate(-50%, -50%);
  }

  to {
    opacity: 1;
    transform: scale(1) translate(-50%, -50%);
  }
}

.enter {
  animation-name: enterCenter;
}